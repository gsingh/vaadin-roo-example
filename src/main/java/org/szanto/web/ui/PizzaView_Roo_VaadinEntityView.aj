// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.szanto.web.ui;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import java.util.List;
import org.szanto.domain.Pizza;
import org.szanto.web.EntityTableColumnGenerator;
import org.szanto.web.ui.PizzaView;

privileged aspect PizzaView_Roo_VaadinEntityView {
    
    public String PizzaView.getEntityName() {
        return "Pizza";
    }
    
    public Class<Pizza> PizzaView.getEntityClass() {
        return Pizza.class;
    }
    
    public boolean PizzaView.isCreateAllowed() {
        return true;
    }
    
    public boolean PizzaView.isUpdateAllowed() {
        return true;
    }
    
    public boolean PizzaView.isDeleteAllowed() {
        return true;
    }
    
    public List<Pizza> PizzaView.listEntities() {
        List<Pizza> list = Pizza.findAllPizzas();
        return list;
    }
    
    public Pizza PizzaView.saveEntity(Pizza entity) {
        if (entity == null) {
            return null;
        }
        return (Pizza) entity.merge();
    }
    
    public void PizzaView.deleteEntity(Pizza entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean PizzaView.isNewEntity(Pizza entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String PizzaView.getIdProperty() {
        return "id";
    }
    
    public String PizzaView.getVersionProperty() {
        return "version";
    }
    
    public Pizza PizzaView.createEntityInstance() {
        return new Pizza();
    }
    
    public BeanContainer<Long, Pizza> PizzaView.getTableContainer() {
        BeanContainer<Long, Pizza> container = new BeanContainer<Long, Pizza>(Pizza.class);
        container.setBeanIdProperty("id");
        for (Pizza entity : Pizza.findAllPizzas()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item PizzaView.getItemForEntity(Pizza entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<Pizza>(entity);
        }
        return item;
    }
    
    public Pizza PizzaView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<Pizza>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object PizzaView.getIdForEntity(Pizza entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void PizzaView.setupGeneratedColumns(Table table) {
        table.removeGeneratedColumn("toppings");
        table.addGeneratedColumn("toppings", new EntityTableColumnGenerator((String) getToppingCaptionPropertyId()));
        table.removeGeneratedColumn("base");
        table.addGeneratedColumn("base", new EntityTableColumnGenerator((String) getBaseCaptionPropertyId()));
    }
    
    public Object PizzaView.getToppingCaptionPropertyId() {
        return "name";
    }
    
    public Object PizzaView.getBaseCaptionPropertyId() {
        return "name";
    }
    
}
