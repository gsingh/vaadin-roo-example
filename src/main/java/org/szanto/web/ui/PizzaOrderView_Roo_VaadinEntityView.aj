// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.szanto.web.ui;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import java.util.List;
import org.szanto.domain.PizzaOrder;
import org.szanto.web.EntityTableColumnGenerator;
import org.szanto.web.ui.PizzaOrderView;

privileged aspect PizzaOrderView_Roo_VaadinEntityView {
    
    public String PizzaOrderView.getEntityName() {
        return "Pizza Order";
    }
    
    public Class<PizzaOrder> PizzaOrderView.getEntityClass() {
        return PizzaOrder.class;
    }
    
    public boolean PizzaOrderView.isCreateAllowed() {
        return true;
    }
    
    public boolean PizzaOrderView.isUpdateAllowed() {
        return true;
    }
    
    public boolean PizzaOrderView.isDeleteAllowed() {
        return true;
    }
    
    public List<PizzaOrder> PizzaOrderView.listEntities() {
        List<PizzaOrder> list = PizzaOrder.findAllPizzaOrders();
        return list;
    }
    
    public PizzaOrder PizzaOrderView.saveEntity(PizzaOrder entity) {
        if (entity == null) {
            return null;
        }
        return (PizzaOrder) entity.merge();
    }
    
    public void PizzaOrderView.deleteEntity(PizzaOrder entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean PizzaOrderView.isNewEntity(PizzaOrder entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String PizzaOrderView.getIdProperty() {
        return "id";
    }
    
    public String PizzaOrderView.getVersionProperty() {
        return "version";
    }
    
    public PizzaOrder PizzaOrderView.createEntityInstance() {
        return new PizzaOrder();
    }
    
    public BeanContainer<Long, PizzaOrder> PizzaOrderView.getTableContainer() {
        BeanContainer<Long, PizzaOrder> container = new BeanContainer<Long, PizzaOrder>(PizzaOrder.class);
        container.setBeanIdProperty("id");
        for (PizzaOrder entity : PizzaOrder.findAllPizzaOrders()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item PizzaOrderView.getItemForEntity(PizzaOrder entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<PizzaOrder>(entity);
        }
        return item;
    }
    
    public PizzaOrder PizzaOrderView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<PizzaOrder>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object PizzaOrderView.getIdForEntity(PizzaOrder entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void PizzaOrderView.setupGeneratedColumns(Table table) {
        table.removeGeneratedColumn("pizzas");
        table.addGeneratedColumn("pizzas", new EntityTableColumnGenerator((String) getPizzaCaptionPropertyId()));
    }
    
    public Object PizzaOrderView.getPizzaCaptionPropertyId() {
        return "name";
    }
    
}
