// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.szanto.web.ui;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import java.util.List;
import org.szanto.domain.Base;
import org.szanto.web.EntityTableColumnGenerator;
import org.szanto.web.ui.BaseView;

privileged aspect BaseView_Roo_VaadinEntityView {
    
    public String BaseView.getEntityName() {
        return "Base";
    }
    
    public Class<Base> BaseView.getEntityClass() {
        return Base.class;
    }
    
    public boolean BaseView.isCreateAllowed() {
        return true;
    }
    
    public boolean BaseView.isUpdateAllowed() {
        return true;
    }
    
    public boolean BaseView.isDeleteAllowed() {
        return true;
    }
    
    public List<Base> BaseView.listEntities() {
        List<Base> list = Base.findAllBases();
        return list;
    }
    
    public Base BaseView.saveEntity(Base entity) {
        if (entity == null) {
            return null;
        }
        return (Base) entity.merge();
    }
    
    public void BaseView.deleteEntity(Base entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean BaseView.isNewEntity(Base entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String BaseView.getIdProperty() {
        return "id";
    }
    
    public String BaseView.getVersionProperty() {
        return "version";
    }
    
    public Base BaseView.createEntityInstance() {
        return new Base();
    }
    
    public BeanContainer<Long, Base> BaseView.getTableContainer() {
        BeanContainer<Long, Base> container = new BeanContainer<Long, Base>(Base.class);
        container.setBeanIdProperty("id");
        for (Base entity : Base.findAllBases()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item BaseView.getItemForEntity(Base entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<Base>(entity);
        }
        return item;
    }
    
    public Base BaseView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<Base>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object BaseView.getIdForEntity(Base entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void BaseView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
}
