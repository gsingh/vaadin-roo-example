// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.szanto.web.ui;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import java.util.List;
import org.szanto.domain.Topping;
import org.szanto.web.EntityTableColumnGenerator;
import org.szanto.web.ui.ToppingView;

privileged aspect ToppingView_Roo_VaadinEntityView {
    
    public String ToppingView.getEntityName() {
        return "Topping";
    }
    
    public Class<Topping> ToppingView.getEntityClass() {
        return Topping.class;
    }
    
    public boolean ToppingView.isCreateAllowed() {
        return true;
    }
    
    public boolean ToppingView.isUpdateAllowed() {
        return true;
    }
    
    public boolean ToppingView.isDeleteAllowed() {
        return true;
    }
    
    public List<Topping> ToppingView.listEntities() {
        List<Topping> list = Topping.findAllToppings();
        return list;
    }
    
    public Topping ToppingView.saveEntity(Topping entity) {
        if (entity == null) {
            return null;
        }
        return (Topping) entity.merge();
    }
    
    public void ToppingView.deleteEntity(Topping entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean ToppingView.isNewEntity(Topping entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String ToppingView.getIdProperty() {
        return "id";
    }
    
    public String ToppingView.getVersionProperty() {
        return "version";
    }
    
    public Topping ToppingView.createEntityInstance() {
        return new Topping();
    }
    
    public BeanContainer<Long, Topping> ToppingView.getTableContainer() {
        BeanContainer<Long, Topping> container = new BeanContainer<Long, Topping>(Topping.class);
        container.setBeanIdProperty("id");
        for (Topping entity : Topping.findAllToppings()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item ToppingView.getItemForEntity(Topping entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<Topping>(entity);
        }
        return item;
    }
    
    public Topping ToppingView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<Topping>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object ToppingView.getIdForEntity(Topping entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void ToppingView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
}
